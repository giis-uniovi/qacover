package test4giis.qacover.it;

import static org.junit.Assert.assertTrue;

import org.junit.After;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TestName;

import giis.portable.util.FileUtil;
import giis.visualassert.Framework;
import giis.visualassert.SoftVisualAssert;
import test4giis.qacover.model.TestReport;

/**
 * Integration test execute several artifacts that use the QACover jars from outside of the maven context
 * This test class only checks the results, the execution of tests must be before
 * from the it folder using the build.xml script
 */
public class ITTests {
	private String bmk="src/test/resources";
	private SoftVisualAssert va;
	
	@Rule public TestName testName = new TestName();

	@Before
	public void setUp() {
		va = new SoftVisualAssert().setFramework(Framework.JUNIT4).setCallStackLength(3)
				.setBrightColors(true).setReportSubdir("target"); 
	}
	@After
	public void tearDown() {
		va.assertAll("diff-aggregated-" + testName.getMethodName() + ".html"); 
	}
	
	/**
	 * Checks data extracted using qacover-model.jar as an api to acccess the data
	 * from it/qacover-api-sample (uses a copy of the rules generated by TestReport at ut)
	 */
	@Test
	public void testItQacoverApi() {
		String expFolder=FileUtil.getPath(bmk, "qacover-api-sample");
		String actFolder=FileUtil.getPath("..", "it", "qacover-api-sample", "target", "qacover", "reports");
		assertFiles(expFolder, actFolder, "by-class.txt");
		assertFiles(expFolder, actFolder, "by-run-order.txt", true);
	}
	
	/**
	 * Check the reports generated from an standalone spring application (spring-petclinic-main)
	 * that bounds QACover as a dependency.
	 */
	@Test
	public void testItQacoverSpring() {
		String expFolder=FileUtil.getPath(bmk, "spring-petclinic-main");
		String actFolder=FileUtil.getPath("..", "it", "spring-petclinic-main", "target", "qacover", "reports");
		assertFiles(expFolder, actFolder, "index.html", true);
		assertFiles(expFolder, actFolder, "org.springframework.samples.petclinic.PetclinicIntegrationTests.html");
	}

	/**
	 * Checks the reports generated from a standalone application (qacover-api-sample)
	 * that does not bound any QACover dependency.
	 */
	@Test
	public void testItQacoverUber() {
		String expFolder=FileUtil.getPath(bmk, "qacover-uber-main");
		String actFolder=FileUtil.getPath("..", "it", "qacover-uber-main", "target", "qacover", "reports");
		assertFiles(expFolder, actFolder, "index.html", true);
		assertFiles(expFolder, actFolder, "TestUber.html");
	}
	/**
	 * Complements testItQacoverUber by checking the output produced by the standalone reporter
	 */
	@Test
	public void testItQacoverUberLogs() {
		// Check the summary output produced by report execution
		String actFolder=FileUtil.getPath("..", "it", "qacover-uber-main", "target", "qacover", "reports");
		String actual=FileUtil.fileRead(FileUtil.getPath(actFolder, "report.log"));
		String expected="Report for class: TestUber qcount=1,qerror=0,count=3,dead=1,error=0";
		assertTrue("Expected not contained in actual: " + actual, actual.contains(expected));
		
		// Check the summary of the own application log
		actFolder=FileUtil.getPath("..", "it", "qacover-uber-main", "target");
		actual=FileUtil.fileRead(FileUtil.getPath(actFolder, "qacover-uber-log.log"));
		expected="INFO  giis.qacover.core.CoverageManager -  SUMMARY: Covered 1 out of 3";
		assertTrue("Expected not contained in actual: " + actual, actual.contains(expected));
	}

	private void assertFiles(String expectedFolder, String actualFolder, String fileName) {
		assertFiles(expectedFolder, actualFolder, fileName, false);
	}
	private void assertFiles(String expectedFolder, String actualFolder, String fileName, boolean doRegex) {
		String expected=FileUtil.fileRead(FileUtil.getPath(expectedFolder, fileName)).replaceAll("\r", "");
		String actual=FileUtil.fileRead(FileUtil.getPath(actualFolder, fileName)).replaceAll("\r", "");
		expected=TestReport.reprocessReportForCompare(expected);
		actual=TestReport.reprocessReportForCompare(actual);
		va.assertEquals(expected, actual, "Differences comparing "+fileName, ("diff-it-"+expectedFolder+"-"+fileName+".html").replace("/","-").replace("\\","-"));
	}
}
