package giis.qacover.report;

import giis.qacover.model.Variability;

public class SharedHtmlWriter {
	
	private SharedHtmlWriter() {
	    throw new IllegalStateException("Utility class");
	}
	
	public static String getHtmlBegin(String title, boolean fullWidth) {
		String bootstrap = "\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\">" +
				"\n<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>" + 
				"\n<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>" + 
				"\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\" integrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\" crossorigin=\"anonymous\"></script>";
		return "<!doctype html>"
				+ "\n<html lang=\"en\">"
				+ "\n<head>"
				+ "\n<title>" + title + "</title>"
				+ "\n<meta charset=\"utf-8\">"
				+ "\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">"
				+ bootstrap
				+ "\n<style>.fill { min-width: 100%; width: 100%; } .progress {margin-bottom: 0 !important;}</style>"
				+ "\n</head>"
				+ "\n<body>"
				+ "\n<div class=\"container" + (fullWidth ? " fill" : "") +"\">";
	}
	
	public static String getHtmlFooter() {
		Variability variab=new Variability();
		return "\n<div><span style=\"float:right;\">"
				+ "<small>"
				+ "Generated by: QACover " + variab.getPlatformName()
				+ " - [version " + variab.getVersion() + "]"
				+ " - <a href=\"" + variab.getServiceDeskAddress() + "\">[Submit a problem report]"
				+ "</small>"
				+ "</span></div>";
	}
	
	public static String getHtmlEnd() {
		return "\n</div>" + 
				"\n</body>" + 
				"\n</html>";
	}
	
	public static String percent(int count, int dead) {
		return count==0 ? "" : String.valueOf((dead*100)/count)+"%";
	}

}
